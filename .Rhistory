# 1 files combined:
# 	C:\Users\Tharsis\Documents\GitHub\PyRate-master\PyRate-master\example_files\pyrate_mcmc_logs/Ursidae_1_G_marginal_rates.log
# 95% HPDs calculated using code from Biopy (https://www.cs.auckland.ac.nz/~yhel002/biopy/)
pdf(file='~/GitHub/PyRate-master/PyRate-master/example_files/pyrate_mcmc_logs/Ursidae_1_G_marginal_rates_RTT.pdf',width=0.6*9, height=0.6*21)
par(mfrow=c(3,1))
library(scales)
L_hpd_m95=c(0.149, 0.149,0.15,0.149,0.149,0.15,0.15,0.146,0.143,0.138,0.131,0.131,0.128,0.128,0.128,0.127,0.128,0.126,0.123,0.09,0.102,0.168)
L_hpd_M95=c(0.325, 0.325,0.325,0.325,0.323,0.321,0.319,0.311,0.306,0.297,0.29,0.289,0.286,0.284,0.284,0.284,0.286,0.286,0.29,0.35,1.087,1.746)
M_hpd_m95=c(0.164, 0.164,0.178,0.179,0.174,0.16,0.156,0.149,0.133,0.115,0.113,0.112,0.113,0.112,0.115,0.116,0.117,0.117,0.116,0.116,0.114,0.116)
M_hpd_M95=c(0.58, 0.58,0.469,0.468,0.462,0.452,0.448,0.442,0.421,0.367,0.333,0.317,0.313,0.309,0.311,0.309,0.309,0.309,0.309,0.309,0.311,0.337)
R_hpd_m95=c(-0.371, -0.371,-0.274,-0.269,-0.26,-0.249,-0.237,-0.232,-0.21,-0.176,-0.147,-0.136,-0.134,-0.127,-0.127,-0.125,-0.125,-0.127,-0.137,-0.188,-0.175,-0.07)
R_hpd_M95=c(0.167, 0.167,0.091,0.091,0.091,0.099,0.106,0.106,0.113,0.114,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.185,0.884,1.562)
L_mean=c(0.228, 0.228,0.229,0.229,0.228,0.227,0.226,0.224,0.219,0.215,0.212,0.21,0.209,0.209,0.209,0.208,0.209,0.21,0.212,0.23,0.402,1.003)
M_mean=c(0.332, 0.332,0.302,0.297,0.287,0.28,0.272,0.264,0.249,0.23,0.22,0.216,0.215,0.214,0.214,0.214,0.214,0.215,0.214,0.215,0.215,0.227)
R_mean=c(-0.104, -0.104,-0.073,-0.068,-0.059,-0.052,-0.046,-0.04,-0.031,-0.015,-0.008,-0.006,-0.005,-0.005,-0.006,-0.006,-0.005,-0.005,-0.002,0.016,0.187,0.776)
trans=0.5
age=(0:(22-1))* -1
plot(age,age,type = 'n', ylim = c(0, 1.9206), xlim = c(-23.1,1.1), ylab = 'Speciation rate', xlab = 'Ma',main='Ursidae' )
polygon(c(age, rev(age)), c(L_hpd_M95, rev(L_hpd_m95)), col = alpha("#4c4cec",trans), border = NA)
lines(rev(age), rev(L_mean), col = "#4c4cec", lwd=3)
plot(age,age,type = 'n', ylim = c(0, 0.638), xlim = c(-23.1,1.1), ylab = 'Extinction rate', xlab = 'Ma' )
polygon(c(age, rev(age)), c(M_hpd_M95, rev(M_hpd_m95)), col = alpha("#e34a33",trans), border = NA)
lines(rev(age), rev(M_mean), col = "#e34a33", lwd=3)
plot(age,age,type = 'n', ylim = c(-0.4081, 1.7182), xlim = c(-23.1,1.1), ylab = 'Net diversification rate', xlab = 'Ma' )
abline(h=0,lty=2,col="darkred")
polygon(c(age, rev(age)), c(R_hpd_M95, rev(R_hpd_m95)), col = alpha("#504A4B",trans), border = NA)
lines(rev(age), rev(R_mean), col = "#504A4B", lwd=3)
n <- dev.off()
par(mfrow=c(3,1))
library(scales)
L_hpd_m95=c(0.149, 0.149,0.15,0.149,0.149,0.15,0.15,0.146,0.143,0.138,0.131,0.131,0.128,0.128,0.128,0.127,0.128,0.126,0.123,0.09,0.102,0.168)
L_hpd_M95=c(0.325, 0.325,0.325,0.325,0.323,0.321,0.319,0.311,0.306,0.297,0.29,0.289,0.286,0.284,0.284,0.284,0.286,0.286,0.29,0.35,1.087,1.746)
M_hpd_m95=c(0.164, 0.164,0.178,0.179,0.174,0.16,0.156,0.149,0.133,0.115,0.113,0.112,0.113,0.112,0.115,0.116,0.117,0.117,0.116,0.116,0.114,0.116)
M_hpd_M95=c(0.58, 0.58,0.469,0.468,0.462,0.452,0.448,0.442,0.421,0.367,0.333,0.317,0.313,0.309,0.311,0.309,0.309,0.309,0.309,0.309,0.311,0.337)
R_hpd_m95=c(-0.371, -0.371,-0.274,-0.269,-0.26,-0.249,-0.237,-0.232,-0.21,-0.176,-0.147,-0.136,-0.134,-0.127,-0.127,-0.125,-0.125,-0.127,-0.137,-0.188,-0.175,-0.07)
R_hpd_M95=c(0.167, 0.167,0.091,0.091,0.091,0.099,0.106,0.106,0.113,0.114,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.185,0.884,1.562)
L_mean=c(0.228, 0.228,0.229,0.229,0.228,0.227,0.226,0.224,0.219,0.215,0.212,0.21,0.209,0.209,0.209,0.208,0.209,0.21,0.212,0.23,0.402,1.003)
M_mean=c(0.332, 0.332,0.302,0.297,0.287,0.28,0.272,0.264,0.249,0.23,0.22,0.216,0.215,0.214,0.214,0.214,0.214,0.215,0.214,0.215,0.215,0.227)
R_mean=c(-0.104, -0.104,-0.073,-0.068,-0.059,-0.052,-0.046,-0.04,-0.031,-0.015,-0.008,-0.006,-0.005,-0.005,-0.006,-0.006,-0.005,-0.005,-0.002,0.016,0.187,0.776)
trans=0.5
age=(0:(22-1))* -1
plot(age,age,type = 'n', ylim = c(0, 1.9206), xlim = c(-23.1,1.1), ylab = 'Speciation rate', xlab = 'Ma',main='Ursidae' )
polygon(c(age, rev(age)), c(L_hpd_M95, rev(L_hpd_m95)), col = alpha("#4c4cec",trans), border = NA)
lines(rev(age), rev(L_mean), col = "#4c4cec", lwd=3)
plot(age,age,type = 'n', ylim = c(0, 0.638), xlim = c(-23.1,1.1), ylab = 'Extinction rate', xlab = 'Ma' )
polygon(c(age, rev(age)), c(M_hpd_M95, rev(M_hpd_m95)), col = alpha("#e34a33",trans), border = NA)
lines(rev(age), rev(M_mean), col = "#e34a33", lwd=3)
plot(age,age,type = 'n', ylim = c(-0.4081, 1.7182), xlim = c(-23.1,1.1), ylab = 'Net diversification rate', xlab = 'Ma' )
abline(h=0,lty=2,col="darkred")
polygon(c(age, rev(age)), c(R_hpd_M95, rev(R_hpd_m95)), col = alpha("#504A4B",trans), border = NA)
lines(rev(age), rev(R_mean), col = "#504A4B", lwd=3)
par(mfrow=c(1,1))
library(scales)
L_hpd_m95=c(0.149, 0.149,0.15,0.149,0.149,0.15,0.15,0.146,0.143,0.138,0.131,0.131,0.128,0.128,0.128,0.127,0.128,0.126,0.123,0.09,0.102,0.168)
L_hpd_M95=c(0.325, 0.325,0.325,0.325,0.323,0.321,0.319,0.311,0.306,0.297,0.29,0.289,0.286,0.284,0.284,0.284,0.286,0.286,0.29,0.35,1.087,1.746)
M_hpd_m95=c(0.164, 0.164,0.178,0.179,0.174,0.16,0.156,0.149,0.133,0.115,0.113,0.112,0.113,0.112,0.115,0.116,0.117,0.117,0.116,0.116,0.114,0.116)
M_hpd_M95=c(0.58, 0.58,0.469,0.468,0.462,0.452,0.448,0.442,0.421,0.367,0.333,0.317,0.313,0.309,0.311,0.309,0.309,0.309,0.309,0.309,0.311,0.337)
R_hpd_m95=c(-0.371, -0.371,-0.274,-0.269,-0.26,-0.249,-0.237,-0.232,-0.21,-0.176,-0.147,-0.136,-0.134,-0.127,-0.127,-0.125,-0.125,-0.127,-0.137,-0.188,-0.175,-0.07)
R_hpd_M95=c(0.167, 0.167,0.091,0.091,0.091,0.099,0.106,0.106,0.113,0.114,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.185,0.884,1.562)
L_mean=c(0.228, 0.228,0.229,0.229,0.228,0.227,0.226,0.224,0.219,0.215,0.212,0.21,0.209,0.209,0.209,0.208,0.209,0.21,0.212,0.23,0.402,1.003)
M_mean=c(0.332, 0.332,0.302,0.297,0.287,0.28,0.272,0.264,0.249,0.23,0.22,0.216,0.215,0.214,0.214,0.214,0.214,0.215,0.214,0.215,0.215,0.227)
R_mean=c(-0.104, -0.104,-0.073,-0.068,-0.059,-0.052,-0.046,-0.04,-0.031,-0.015,-0.008,-0.006,-0.005,-0.005,-0.006,-0.006,-0.005,-0.005,-0.002,0.016,0.187,0.776)
trans=0.5
age=(0:(22-1))* -1
plot(age,age,type = 'n', ylim = c(0, 1.9206), xlim = c(-23.1,1.1), ylab = 'Speciation rate', xlab = 'Ma',main='Ursidae' )
polygon(c(age, rev(age)), c(L_hpd_M95, rev(L_hpd_m95)), col = alpha("#4c4cec",trans), border = NA)
lines(rev(age), rev(L_mean), col = "#4c4cec", lwd=3)
library(ape)
library(geiger)
library(parallel)
tre <- read.tree("Haemulidae4models.tre")
dat<-read.csv("Haemulidae4models.csv", stringsAsFactors=FALSE) # Contains data on standard length, eye width and buccal width
setwd("~/GitHub/macroevo")
tre <- read.tree("Haemulidae4models.tre")
dat<-read.csv("Haemulidae4models.csv", stringsAsFactors=FALSE) # Contains data on standard length, eye width and buccal width
head(dat)
trait <- dat[,2] # Selecting a trait
names(trait) <- tre$tip.label # Assigning the appropriate tip labels to the trait object
names(trait) <- dat$taxon
trait <- dat[,3]
BM.model <- fitContinuous(tre, trait, model="BM")
BM.model <- fitContinuous(tre, trait, model="BM")
?fitContinuous
names(trait)
tree
tre
head(trait)
head(tre$tip.label)
head(dat$taxon)
names(trait) <- dat$taxon
BM.model <- fitContinuous(tre, trait, model="BM")
trait <- dat[,3]
BM.model <- fitContinuous(tre, trait, model="BM")
names(trait) <- dat$taxon
BM.model <- fitContinuous(tre, trait, model="BM")
OU.model <- fitContinuous(tre, trait, model="OU")
EB.model <- fitContinuous(tre, trait, model="EB")
trend.model <- fitContinuous(tre, trait, model="trend")
EB.model$bnd
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(alpha=c(0, 150)))
OU.model <- fitContinuous(tre, trait, model="OU")
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(alpha=c(0, 150)))
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(alpha=c(0, 300)))
trait <- dat[,3]
names(trait) <- dat$taxon
BM.model <- fitContinuous(tre, trait, model="BM")
OU.model <- fitContinuous(tre, trait, model="OU")
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(alpha=c(0, 300)))
trend.model <- fitContinuous(tre, trait, model="trend")
EB.model <- fitContinuous(tre, trait, model="EB")
EB.model$bnd
OU.model$bnd
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-500, -0.0000001))
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-500, -0.0000001)))
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, -0.0000001)))
EB.model$bnd
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, 0)))
EB.model$bnd
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, -0.00000000001)))
EB.model$bnd
trend.model <- fitContinuous(tre, trait, model="trend")
BM.model$opt
model <- c("BM", "OU", "EB", "trend")
likelihood <- c(BM.model$opt$lnL, OU.model$opt$lnL, EB.model$opt$lnL, trend.model$opt$lnL)
AICc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
df <- data.frame(model, likelihood, AICc)
df
all.aicc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
delta.aicc <- all.aicc - min(all.aicc)
delta.aicc
model <- c("BM", "OU", "EB", "trend")
likelihood <- c(BM.model$opt$lnL, OU.model$opt$lnL, EB.model$opt$lnL, trend.model$opt$lnL)
AICc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
all.aicc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
delta.aicc <- all.aicc - min(all.aicc)
df <- data.frame(model, likelihood, AICc, delta.aicc)
df
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, 10)))
trait <- dat[,3]
names(trait) <- dat$taxon
BM.model <- fitContinuous(tre, trait, model="BM")
OU.model <- fitContinuous(tre, trait, model="OU")
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, 10)))
EB.model$bnd
trend.model <- fitContinuous(tre, trait, model="trend")
#Report the likelihoods, AICcs, and delta AICs in a table
model <- c("BM", "OU", "EB", "trend")
likelihood <- c(BM.model$opt$lnL, OU.model$opt$lnL, EB.model$opt$lnL, trend.model$opt$lnL)
AICc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
all.aicc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
delta.aicc <- all.aicc - min(all.aicc)
df <- data.frame(model, likelihood, AICc, delta.aicc)
df
rel.L <- exp(-delta.aicc*0.5)
AK.weights <- rel.L/sum(rel.L)
AK.weights
df <- data.frame(model, likelihood, AICc, delta.aicc, AK.weights)
df
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, 0)))
model <- c("BM", "OU", "EB", "trend")
likelihood <- c(BM.model$opt$lnL, OU.model$opt$lnL, EB.model$opt$lnL, trend.model$opt$lnL)
AICc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
all.aicc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
delta.aicc <- all.aicc - min(all.aicc)
rel.L <- exp(-delta.aicc*0.5)
AK.weights <- rel.L/sum(rel.L)
df <- data.frame(model, likelihood, AICc, delta.aicc, AK.weights)
df
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, 1)))
model <- c("BM", "OU", "EB", "trend")
likelihood <- c(BM.model$opt$lnL, OU.model$opt$lnL, EB.model$opt$lnL, trend.model$opt$lnL)
AICc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
all.aicc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
delta.aicc <- all.aicc - min(all.aicc)
rel.L <- exp(-delta.aicc*0.5)
AK.weights <- rel.L/sum(rel.L)
df <- data.frame(model, likelihood, AICc, delta.aicc, AK.weights)
df
EB.model <- fitContinuous(tre, trait, model="EB", bounds=list(a=c(-10, 0)))
model <- c("BM", "OU", "EB", "trend")
likelihood <- c(BM.model$opt$lnL, OU.model$opt$lnL, EB.model$opt$lnL, trend.model$opt$lnL)
AICc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
all.aicc <- c(BM.model$opt$aicc, OU.model$opt$aicc, EB.model$opt$aicc, trend.model$opt$aicc)
delta.aicc <- all.aicc - min(all.aicc)
rel.L <- exp(-delta.aicc*0.5)
AK.weights <- rel.L/sum(rel.L)
df <- data.frame(model, likelihood, AICc, delta.aicc, AK.weights)
df
cat("summary table", df)
print("summary table", df)
(dd <- data.frame(x = 1:8, f = gl(2,4), ch = I(letters[1:8])))
# print() with defaults
print(dd, quote = TRUE, row.names = FALSE)
print("summarytable", dd, quote = TRUE, row.names = FALSE)
daic <- t(apply(aic.all, 1, foo))#apply that function to everything in aic.all
cat("Table of delta-aic values; zero - best model\n")
print(daic, digits=2)
#these models allow those to scenarios to be compared
spvar <- fitSPVAR(balistoid.times, init=c(2, .2, .1))#variable speciation: exponentially declining speciation, constant extinction rate
aic.spvar <- spvar$aic
exvar <- fitEXVAR(balistoid.times, init=c(.3, .01, 1))#variable extinction: constant speciation, exponentially increasing extinction rate
aic.exvar <- exvar$aic
both <- fitBOTHVAR(balistoid.times, init=c(.3, .5, .1, .5))#variable extinction and speciation
aic.both <- both$aic
#make a table and compare them all
aic.all <- cbind(aic.pb, aic.bd, aic.ddl, aic.ddx, aic.spvar, aic.exvar, aic.both)
foo <- function(x) x-x[which(x==min(x))] #quick function to compare all models to the model with lowest aic score
daic <- t(apply(aic.all, 1, foo))#apply that function to everything in aic.all
cat("Table of delta-aic values; zero - best model\n")
print(daic, digits=2)
cat("Summary Table")
print(df)
treeExlist <- list()  #make empty list for trees to fill in
treeNoExlist <- list()
for (i in 1:5) {
parsbd <- c(10, 3)
treeEx <- simulateTree(parsbd, max.taxa = 100, include.extinct = T)
treeExPruned <- drop.fossil(treeEx)
treeExlist[[i]] <- treeExPruned  #fill in list with trees
parspb <- c(7, 0)
treeNoEx <- simulateTree(parspb, max.taxa = 100)
treeNoExlist[[i]] <- treeNoEx
}
