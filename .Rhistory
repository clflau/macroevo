getwd()
library(ade4)
data(olympic)
read.dataframe(olympic)
read.table(olympic)
read.table("olympic")
attach(olympic)
dudi.pca()
library(adegenet)
obj1 <- read.structure("/Users/Clive/Dropbox/Colp R/Colp_6-loci.str")
obj1[1:5]
obj1
print(obj1)
summary(obj1)
X <- scaleGen(obj1, missing="mean")
summary(X)
print(X)
dim(X)
X[1:5]
X[1:5,1:5]
X[1:65,1:5]
X[1:5,1:65]
pca1 <- dudi.pca(X, cent=FALSE, scale=FALSE, scannf=FALSE, nf=5)
barplot(pca1$eig[1:50], main="PCA eigenvalues", col=heat.colors(50))
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp(col,.6), axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2, axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
add.scatter.eig(pca1$eig[1:20], 3,1,2)
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp(col,.6), axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp("col",.6), axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp(), axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp, axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp(col,.6), axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2, axesell=FALSE, cstar=0, cpoint=3, grid=FALSE)
add.scatter.eig(pca1$eig[1:20], 3,1,2)
s.class(pca1$li, pop(obj1),xax=1,yax=2, axesell=FALSE, cstar=0, cpoint=2, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2, axesell=FALSE, cstar=1, cpoint=2, grid=FALSE)
s.class(pca1$li, pop(obj1),xax=1,yax=2, axesell=FALSE, cstar=0, cpoint=2, grid=FALSE)
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
colorplot(pca1$li, pca1$li, transp=TRUE, cex=5, xlab="PC 1", ylab="PC 2")
colorplot(pca1$li, pca1$li, transp=TRUE, cex=3, xlab="PC 1", ylab="PC 2")
X$tab[1:5]
X$tab[10:18,1:10]
X[1:5]
summary(X)
X$all.names[[3]]
X@all.names[[3]]
X@tab[[3]]
obj1$tab[1:5]
obj1$tab[1:101, 1:65]
X <- scaleGen(microbov, missing="mean")
library(adegenet)
obj1 <- read.structure("/Users/Tharsis/Dropbox/Colp R/Colp_6-loci_locale.str")
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp(col,.6), axesell=FALSE, cstar=0, cpoint=3, grid=TRUE)
add.scatter.eig(pca1$eig[1:20], 3,1,2)
write.table(pca1$li, "/Users/Clive/Dropbox/Colp R/Colp_6-loci.csv", sep=",")
library(adegenet)
library(ade4)
obj1 <- read.structure("/Users/Tharsis/Dropbox/Colp R/Colp_6-loci_locale.str")
s.class(pca1$li, pop(obj1),xax=1,yax=2,col=transp(col,.6), axesell=FALSE, cstar=0, cpoint=3, grid=TRUE)
add.scatter.eig(pca1$eig[1:20], 3,1,2)
write.table(pca1$li, "/Users/Clive/Dropbox/Colp R/Colp_6-loci.csv", sep=",")
library(ggplot2)
a <- read.csv("/Users/Tharsis/Dropbox/Colp R/Colp_6-loci.csv", header=TRUE)
ggplot(a, aes(a$Axis1, a$Axis2, label= a$ID, color=(a$sp))) + geom_text(size=3, alpha=.8, cex=4, position="jitter") + theme(panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor=element_blank(), axis.line = element_line(size = .3), legend.position="none") + stat_ellipse(level=.95, linetype=1) + labs(x="PCA1", y="PCA2", title="PCA of C. regis (blue) and C. hubbsi (red) in northern Gulf")
ggplot(a, aes(a$Axis1, a$Axis3, label= a$ID, color=(a$sp))) + geom_text(size=3, alpha=.8, cex=4, position="jitter") + theme(panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor=element_blank(), axis.line = element_line(size = .3), legend.position="none") + stat_ellipse(level=.95, linetype=1) + labs(x="PCA1", y="PCA3", title="PCA of C. regis (blue) and C. hubbsi (red) in northern Gulf")
ggplot(a, aes(a$Axis1, a$Axis4, label= a$ID, color=(a$sp))) + geom_text(size=3, alpha=.8, cex=4, position="jitter") + theme(panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor=element_blank(), axis.line = element_line(size = .3), legend.position="none") + stat_ellipse(level=.95, linetype=1) + labs(x="PCA1", y="PCA4", title="PCA of C. regis (blue) and C. hubbsi (red) in northern Gulf")
#Greer's data
b <- read.csv("/Users/Clive/Desktop//Gmi-Gde MSAT data 11May2015_gulfPCA.csv")
ggplot(b, aes(a$Axis1, a$Axis2, label= a$pop, color=(a$sp))) + geom_text(size=3, alpha=.8, cex=4, position="jitter") + theme(panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor=element_blank(), axis.line = element_line(size = .3), legend.position="none") + stat_ellipse(level=.95, linetype=1) + labs(x="PCA1", y="PCA3", title="PCA of G. mirabilis (blue) and detrusus (red) in northern Gulf")
source("~/GitHub/PyRate-master/pyrate_utilities.r")
extract.ages(file="~/GitHub/PyRate-master/example_files/Ursidae.txt", replicates=10)
version
version
setwd("~/GitHub/macroevo")
rm(list = ls())
library(geiger)
library(phytools)
library(diversitree)
source('rabosky_functions.R')
simulateTree()
simulateTree
REPS <- 5
taxon_count <- numeric(REPS)
for (i in 1:REPS){
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 100)
taxon_count[i] <- length(tree$tip.label)
}
REPS <- 5
taxon_count <- numeric(REPS)
for (i in 1:REPS){
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 100)
taxon_count[i] <- length(tree$tip.label)
}
REPS <- 5
taxon_count <- numeric(REPS)
for (i in 1:REPS){
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 10)
taxon_count[i] <- length(tree$tip.label)
}
simulateTree
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 10)
plot(tree, show.tip.label = F)
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 10)
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
plot(tree, show.tip.label = F)
REPS <- 5
taxon_count <- numeric(REPS)
for (i in 1:REPS){
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
taxon_count[i] <- length(tree$tip.label)
}
hist(taxon_count)
?tree.bd
REPS <- 5
taxon_count <- numeric(REPS)
for (i in 1:REPS){
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 2)
taxon_count[i] <- length(tree$tip.label)
}
REPS <- 5
taxon_count <- numeric(REPS)
for (i in 1:REPS){
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
taxon_count[i] <- length(tree$tip.label)
}
plot(tree)
hist(taxon_count)
hist(taxon_count, main = "Stochasticity in birth-death process in taxon count")
REPS <- 100
taxon_count <- numeric(REPS)
for (i in 1:REPS){
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
taxon_count[i] <- length(tree$tip.label)
}
hist(taxon_count, main = "Stochasticity in birth-death process in taxon count")
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
tree
plot(tree)
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
plot(tree)
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
plot(tree)
pars <- c(10, 5)
tree <- simulateTree(pars, max.t = 1)
plot(tree)
?tree.bd
pars <- c(10, 5); #in order: lambda, mu
tt <- simulateTree(pars, max.taxa=100)
ttEx <- sim.bdtree(b = 10, d = 1, stop = "taxa", t = 100, n = 100 )
plot(ttEx, show.tip.label = F)
sim.bdtree
?sim.bdtree
livingOnly <- drop.fossil(ttEx)  #prune out the extinct taxa
plot(livingOnly, show.tip.label = F)
par(mfrow = c(1,2))
plot(ttEx, show.tip.label = F, main = "extant and extinct")
plot(livingOnly, show.tip.label = F, main = "extant only")
plot(tt, show.tip.label = F, main = "no extinction")
plot(livingOnly, show.tip.label = F, main = "extinction")
library(DDD)
library(ade4)
library(DDD)
install.packages(DDD)
par(mfrow = c(1,2))
plot(ttEx, show.tip.label = F, main = "extant and extinct")
plot(livingOnly, show.tip.label = F, main = "extant only")
par(mfrow = c(1,2))
plot(tt, show.tip.label = F, main = "no extinction")
plot(livingOnly, show.tip.label = F, main = "extinction")
plot(ttEx, show.tip.label = F, main = "extant and extinct")
plot(livingOnly, show.tip.label = F, main = "extant only")
par(mfrow = c(1,2))
plot(tt, show.tip.label = F, main = "no extinction")
plot(livingOnly, show.tip.label = F, main = "extinction")
ddTree <- dd_sim(c(0.12,0.02,100),100)
library(DD)
install.packages(DD)
install.packages("DDD")
library(DDD)
ddTree <- dd_sim(c(0.12,0.02,100),100)
ddLivingOnly <- ddTree[[1]]
ddTree
par(mfrow = c(1,2))
plot(ddLivingOnly, show.tip.label = F, main = "diversity dependence")
ltt(ddLivingOnly)
?DDD
?dd_sim
plot(ddLivingOnly, show.tip.label = F, main = "diversity dependence")
ltt(ddLivingOnly)
REPS <- 5
for (i in 1:REPS){
pars <- c(10, 5)
tt <- simulateTree(pars, max.taxa = 100)
ttEx <- sim.bdtree(b = 10, d = 5, stop = "taxa", t = 100, n = 100 )
livingOnly <- drop.fossil(ttEx)
}
ttEx <- sim.bdtree(b = 10, d = 5, stop = "taxa", t = 100, n = 100 )
livingOnly <- drop.fossil(ttEx)
tt <- simulateTree(pars, max.taxa = 100)
pars <- c(10, 5)
tt <- simulateTree(pars, max.taxa = 100)
ttEx <- sim.bdtree(b = 10, d = 5, stop = "taxa", t = 100, n = 100 )
livingOnly <- drop.fossil(ttEx)
par(mfrow = c(1,2))
plot(tt, show.tip.label = F, main = "no extinction")
plot(livingOnly, show.tip.label = F, main = "extinction")
tt <- simulateTree(pars, max.taxa=100)
##simulate under BD and fit gamma
## is confidence in speciation or extinction better?
## regression
## show loop construct
## pull lambda and mu
plot(tt,  show.tip.label = F)
pars <- c(10, 5)
tt <- simulateTree(pars, max.taxa = 100)
ttEx <- sim.bdtree(b = 10, d = 5, stop = "taxa", t = 100, n = 100 )
livingOnly <- drop.fossil(ttEx)
par(mfrow = c(1,2))
plot(tt, show.tip.label = F, main = "no extinction")
plot(livingOnly, show.tip.label = F, main = "extinction")
pars <- c(10, 5)
treeEx <- simulateTree(pars, max.taxa = 100)
treeNoEx <- simulateTree(c(5, 0), max.taxa = 100)
par(mfrow = c(1,2))
plot(treeEx, show.tip.label = F, main = "extinction")
plot(treeNoEx, show.tip.label = F, main = "no extinction")
require(geiger) # loads geiger
require(laser) # loads laser
install.packages("laser")
require(laser) # loads laser
snake_tree<-read.tree("homalops.phy")
# plot the tree
plot(snake_tree)
par(mfrow = c(1, 1))
snake_tree<-read.tree("homalops.phy")
# plot the tree
plot(snake_tree)
pdf('snaketree.pdf')
plot(ladderize(snake_tree))
dev.off()
plot(ladderize(snake_tree))
ltt.plot(snake_tree, log="y")
layout(matrix(1:2, 2, 1))
data(bird.families)
data(bird.orders)
#plot them with titles
ltt.plot(bird.families)
title("Lineages Through Time Plot of the Bird Families")
ltt.plot(bird.families, log = "y")
title(main = "Lineages Through Time Plot of the Bird Families",
sub = "(with logarithmic transformation of the y-axis)")
layout(matrix(1:4, 2, 2))
plot(bird.families, show.tip.label = FALSE)
plot(snake_tree, show.tip.label = FALSE)
ltt.plot(bird.families, main = "Bird families")
ltt.plot(snake_tree, main = "Homalopsid species")
layout(matrix(1))
mltt.plot(bird.families, bird.orders)
snake.times<-getBtimes('homalops.phy')
library(laser)
snake.times<-getBtimes('homalops.phy')
snake_tree<-read.tree("homalops.phy")
snake.times2<-getBtimes(string = write.tree(snake_tree))
snake.times2
plotLtt(snake.times2)
layout(matrix(1:2, 2,1))
ltt.plot(snake_tree, log="y", main = "APE LTT")
plotLtt(snake.times)
snake_gamma <- gammaStat(snake_tree)
snake_gamma
par(mfrow = c(1,1))
displace <- rnorm(1000)  #series of draws from normal distribution
plot(displace)
library(geiger)
x <- cumsum(displace)    #cumulative sum through time
plot(x, type = "l", xlab = "Time", ylab = "Trait Value")
cols<-rainbow(50) # put 50 samples from the rainbow pallette into a new vector called cols
plot(cumsum(rnorm(1000)), type="l", ylim=c(-100,100))
for(i in 1:length(cols))
lines(cumsum(rnorm(1000)), col=cols[i]) # simple for loop for each of the 50 colour samples we draw a line on the plot that is the cumulative summation of 100 draws from a normal distribution.
par(mfrow = c(1,2))
plot(cumsum(rnorm(50)), type="l", ylim=c(-50,50), main="Effect of time under BM")
for(i in 1:50)
lines(cumsum(rnorm(50)), col="blue")
plot(cumsum(rnorm(100)), type="l", ylim=c(-50,50))
for(i in 1:50)
lines(cumsum(rnorm(100)), col="red")
par(mfcol = c(1,1))
plot(cumsum(rnorm(100)), type="l", ylim=c(-80,80), ylab="Trait", col="blue")
for(i in 1:20) lines(cumsum(rnorm(100)), col="blue")
for(i in 1:20) lines(cumsum(rnorm(100, sd=5)), col="green")  # sigma=5, sigma^2=25
tree<-read.tree(text="((grizzlybear:1, polarbear:1):4, spectacledbear:5);")
plot(tree)
nodelabels()
axisPhylo()
rootMass <- 250 # size of ancestor
sigmasq = 2.5 # Brownian rate
time = 5 # 5 million years of independent evolution from the root
sd <- sqrt(time * sigmasq) # Brownian evolution is proportional to rate X time)
specbearDeltaMass <- rnorm(1, mean = 0, sd = sd)
specbearMass <- rootMass + specbearDeltaMass
specbearMass
specbearDeltaMass<-rnorm(1, mean=0, sd=sqrt(sigmasq*tree$edge.length[1])) # in R, tree tip labels are numbered from top to bottomw, so in our tree spectacled bear = 1, polarbear = 2, and grizzly = 3
specbearMass <- rootMass + specbearDeltaMass
specbearMass
specbearDeltaMass
specbearDeltaMass
specbearDeltaMass
specbearDeltaMass <- rnorm(1, mean = 0, sd = sd)
specbearDeltaMass
specbearDeltaMass<-rnorm(1, mean=0, sd=sqrt(sigmasq*tree$edge.length[1])) # in R, tree tip labels are numbered from top to bottomw, so in our tree spectacled bear = 1, polarbear = 2, and grizzly = 3
specbearDeltaMass
specbearDeltaMass
specbearDeltaMass<-rnorm(1, mean=0, sd=sqrt(sigmasq*tree$edge.length[1])) # in R, tree tip labels are numbered from top to bottomw, so in our tree spectacled bear = 1, polarbear = 2, and grizzly = 3
specbearDeltaMass
