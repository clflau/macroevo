# 1 files combined:
# 	C:\Users\Tharsis\Documents\GitHub\PyRate-master\PyRate-master\example_files\pyrate_mcmc_logs/Ursidae_1_G_marginal_rates.log
# 95% HPDs calculated using code from Biopy (https://www.cs.auckland.ac.nz/~yhel002/biopy/)
pdf(file='~/GitHub/PyRate-master/PyRate-master/example_files/pyrate_mcmc_logs/Ursidae_1_G_marginal_rates_RTT.pdf',width=0.6*9, height=0.6*21)
par(mfrow=c(3,1))
library(scales)
L_hpd_m95=c(0.149, 0.149,0.15,0.149,0.149,0.15,0.15,0.146,0.143,0.138,0.131,0.131,0.128,0.128,0.128,0.127,0.128,0.126,0.123,0.09,0.102,0.168)
L_hpd_M95=c(0.325, 0.325,0.325,0.325,0.323,0.321,0.319,0.311,0.306,0.297,0.29,0.289,0.286,0.284,0.284,0.284,0.286,0.286,0.29,0.35,1.087,1.746)
M_hpd_m95=c(0.164, 0.164,0.178,0.179,0.174,0.16,0.156,0.149,0.133,0.115,0.113,0.112,0.113,0.112,0.115,0.116,0.117,0.117,0.116,0.116,0.114,0.116)
M_hpd_M95=c(0.58, 0.58,0.469,0.468,0.462,0.452,0.448,0.442,0.421,0.367,0.333,0.317,0.313,0.309,0.311,0.309,0.309,0.309,0.309,0.309,0.311,0.337)
R_hpd_m95=c(-0.371, -0.371,-0.274,-0.269,-0.26,-0.249,-0.237,-0.232,-0.21,-0.176,-0.147,-0.136,-0.134,-0.127,-0.127,-0.125,-0.125,-0.127,-0.137,-0.188,-0.175,-0.07)
R_hpd_M95=c(0.167, 0.167,0.091,0.091,0.091,0.099,0.106,0.106,0.113,0.114,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.185,0.884,1.562)
L_mean=c(0.228, 0.228,0.229,0.229,0.228,0.227,0.226,0.224,0.219,0.215,0.212,0.21,0.209,0.209,0.209,0.208,0.209,0.21,0.212,0.23,0.402,1.003)
M_mean=c(0.332, 0.332,0.302,0.297,0.287,0.28,0.272,0.264,0.249,0.23,0.22,0.216,0.215,0.214,0.214,0.214,0.214,0.215,0.214,0.215,0.215,0.227)
R_mean=c(-0.104, -0.104,-0.073,-0.068,-0.059,-0.052,-0.046,-0.04,-0.031,-0.015,-0.008,-0.006,-0.005,-0.005,-0.006,-0.006,-0.005,-0.005,-0.002,0.016,0.187,0.776)
trans=0.5
age=(0:(22-1))* -1
plot(age,age,type = 'n', ylim = c(0, 1.9206), xlim = c(-23.1,1.1), ylab = 'Speciation rate', xlab = 'Ma',main='Ursidae' )
polygon(c(age, rev(age)), c(L_hpd_M95, rev(L_hpd_m95)), col = alpha("#4c4cec",trans), border = NA)
lines(rev(age), rev(L_mean), col = "#4c4cec", lwd=3)
plot(age,age,type = 'n', ylim = c(0, 0.638), xlim = c(-23.1,1.1), ylab = 'Extinction rate', xlab = 'Ma' )
polygon(c(age, rev(age)), c(M_hpd_M95, rev(M_hpd_m95)), col = alpha("#e34a33",trans), border = NA)
lines(rev(age), rev(M_mean), col = "#e34a33", lwd=3)
plot(age,age,type = 'n', ylim = c(-0.4081, 1.7182), xlim = c(-23.1,1.1), ylab = 'Net diversification rate', xlab = 'Ma' )
abline(h=0,lty=2,col="darkred")
polygon(c(age, rev(age)), c(R_hpd_M95, rev(R_hpd_m95)), col = alpha("#504A4B",trans), border = NA)
lines(rev(age), rev(R_mean), col = "#504A4B", lwd=3)
n <- dev.off()
par(mfrow=c(3,1))
library(scales)
L_hpd_m95=c(0.149, 0.149,0.15,0.149,0.149,0.15,0.15,0.146,0.143,0.138,0.131,0.131,0.128,0.128,0.128,0.127,0.128,0.126,0.123,0.09,0.102,0.168)
L_hpd_M95=c(0.325, 0.325,0.325,0.325,0.323,0.321,0.319,0.311,0.306,0.297,0.29,0.289,0.286,0.284,0.284,0.284,0.286,0.286,0.29,0.35,1.087,1.746)
M_hpd_m95=c(0.164, 0.164,0.178,0.179,0.174,0.16,0.156,0.149,0.133,0.115,0.113,0.112,0.113,0.112,0.115,0.116,0.117,0.117,0.116,0.116,0.114,0.116)
M_hpd_M95=c(0.58, 0.58,0.469,0.468,0.462,0.452,0.448,0.442,0.421,0.367,0.333,0.317,0.313,0.309,0.311,0.309,0.309,0.309,0.309,0.309,0.311,0.337)
R_hpd_m95=c(-0.371, -0.371,-0.274,-0.269,-0.26,-0.249,-0.237,-0.232,-0.21,-0.176,-0.147,-0.136,-0.134,-0.127,-0.127,-0.125,-0.125,-0.127,-0.137,-0.188,-0.175,-0.07)
R_hpd_M95=c(0.167, 0.167,0.091,0.091,0.091,0.099,0.106,0.106,0.113,0.114,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.185,0.884,1.562)
L_mean=c(0.228, 0.228,0.229,0.229,0.228,0.227,0.226,0.224,0.219,0.215,0.212,0.21,0.209,0.209,0.209,0.208,0.209,0.21,0.212,0.23,0.402,1.003)
M_mean=c(0.332, 0.332,0.302,0.297,0.287,0.28,0.272,0.264,0.249,0.23,0.22,0.216,0.215,0.214,0.214,0.214,0.214,0.215,0.214,0.215,0.215,0.227)
R_mean=c(-0.104, -0.104,-0.073,-0.068,-0.059,-0.052,-0.046,-0.04,-0.031,-0.015,-0.008,-0.006,-0.005,-0.005,-0.006,-0.006,-0.005,-0.005,-0.002,0.016,0.187,0.776)
trans=0.5
age=(0:(22-1))* -1
plot(age,age,type = 'n', ylim = c(0, 1.9206), xlim = c(-23.1,1.1), ylab = 'Speciation rate', xlab = 'Ma',main='Ursidae' )
polygon(c(age, rev(age)), c(L_hpd_M95, rev(L_hpd_m95)), col = alpha("#4c4cec",trans), border = NA)
lines(rev(age), rev(L_mean), col = "#4c4cec", lwd=3)
plot(age,age,type = 'n', ylim = c(0, 0.638), xlim = c(-23.1,1.1), ylab = 'Extinction rate', xlab = 'Ma' )
polygon(c(age, rev(age)), c(M_hpd_M95, rev(M_hpd_m95)), col = alpha("#e34a33",trans), border = NA)
lines(rev(age), rev(M_mean), col = "#e34a33", lwd=3)
plot(age,age,type = 'n', ylim = c(-0.4081, 1.7182), xlim = c(-23.1,1.1), ylab = 'Net diversification rate', xlab = 'Ma' )
abline(h=0,lty=2,col="darkred")
polygon(c(age, rev(age)), c(R_hpd_M95, rev(R_hpd_m95)), col = alpha("#504A4B",trans), border = NA)
lines(rev(age), rev(R_mean), col = "#504A4B", lwd=3)
par(mfrow=c(1,1))
library(scales)
L_hpd_m95=c(0.149, 0.149,0.15,0.149,0.149,0.15,0.15,0.146,0.143,0.138,0.131,0.131,0.128,0.128,0.128,0.127,0.128,0.126,0.123,0.09,0.102,0.168)
L_hpd_M95=c(0.325, 0.325,0.325,0.325,0.323,0.321,0.319,0.311,0.306,0.297,0.29,0.289,0.286,0.284,0.284,0.284,0.286,0.286,0.29,0.35,1.087,1.746)
M_hpd_m95=c(0.164, 0.164,0.178,0.179,0.174,0.16,0.156,0.149,0.133,0.115,0.113,0.112,0.113,0.112,0.115,0.116,0.117,0.117,0.116,0.116,0.114,0.116)
M_hpd_M95=c(0.58, 0.58,0.469,0.468,0.462,0.452,0.448,0.442,0.421,0.367,0.333,0.317,0.313,0.309,0.311,0.309,0.309,0.309,0.309,0.309,0.311,0.337)
R_hpd_m95=c(-0.371, -0.371,-0.274,-0.269,-0.26,-0.249,-0.237,-0.232,-0.21,-0.176,-0.147,-0.136,-0.134,-0.127,-0.127,-0.125,-0.125,-0.127,-0.137,-0.188,-0.175,-0.07)
R_hpd_M95=c(0.167, 0.167,0.091,0.091,0.091,0.099,0.106,0.106,0.113,0.114,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.113,0.185,0.884,1.562)
L_mean=c(0.228, 0.228,0.229,0.229,0.228,0.227,0.226,0.224,0.219,0.215,0.212,0.21,0.209,0.209,0.209,0.208,0.209,0.21,0.212,0.23,0.402,1.003)
M_mean=c(0.332, 0.332,0.302,0.297,0.287,0.28,0.272,0.264,0.249,0.23,0.22,0.216,0.215,0.214,0.214,0.214,0.214,0.215,0.214,0.215,0.215,0.227)
R_mean=c(-0.104, -0.104,-0.073,-0.068,-0.059,-0.052,-0.046,-0.04,-0.031,-0.015,-0.008,-0.006,-0.005,-0.005,-0.006,-0.006,-0.005,-0.005,-0.002,0.016,0.187,0.776)
trans=0.5
age=(0:(22-1))* -1
plot(age,age,type = 'n', ylim = c(0, 1.9206), xlim = c(-23.1,1.1), ylab = 'Speciation rate', xlab = 'Ma',main='Ursidae' )
polygon(c(age, rev(age)), c(L_hpd_M95, rev(L_hpd_m95)), col = alpha("#4c4cec",trans), border = NA)
lines(rev(age), rev(L_mean), col = "#4c4cec", lwd=3)
setwd("~/GitHub/macroevo")
priorNN <- runif(1000000, min = 100, max = 100000)
bp <- 100000
mu <- 1e-8*bp
for (ii in 1:10000){
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
bp <- 100000
mu <- 1e-8*bp
CoalesTime <- rexp(10000, 1/(priorNN[ii]))
mean(CoalesTime)
MutaRate <- mu*CoalesTime
NumbSNP <- rep(NA, 10000)
for (ii in 1:10000){
NumbSNP[ii] <- rpois(1, MutaRate[ii])
}
mean(NumbSNP)
sims <- cbind(priorNN, NumbSNP)
head(sims)
lim45 <- subset(sims, sims[, 2] >= 45)
heaad(lim45)
head(lim45)
?subset
sims <- cbind(priorNN, NumbSNP)
acceptNN <- subset(sims, sims[, 2] >= 45 & sims[, 2] <= 55)
plot(density(acceptNN))
plot(density(priorNN))
line(density(acceptNN))
plot(density(acceptNN))
head(acceptNN)
hist(density(priorNN))
plot(density(priorNN))
density(priorNN)
plot(density(acceptNN))
?plot
plot(priorNN)
?density
plot(density(acceptNN))
s1<-rnorm(1000,mean=0,sd=1)
s3<-rnorm(1000,mean=0,sd=3)
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal distribution")  #density() gives a line for data, lwd= controls width of line
lines(density(s3),col=4,lwd=4) #add plot of s3 on top of plot of s1, can be added any number of times after plot()
plot(density(priorNN),col=2,lwd=1,xlab="p",xlim=c(0,1),main="Prior and Posterior")
lines(density(acceptNN),col=4,lwd=1)
plot(density(acceptNN),col=4,lwd=1)
posterior <- acceptNN[, 1]
posteriorNN <- acceptNN[, 1]
plot(density(posteriorNN),col=4,lwd=1)
plot(density(priorNN),col=2,lwd=1,xlab="p",xlim=c(0,1),main="Prior and Posterior")
lines(density(posteriorNN),col=4,lwd=1)
head(posteriorNN)
head(priorNN)
plot(density(priorNN),col = 2,lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col=4,lwd=1)
legend(4e4, 0 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1.5)
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1.5)
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
plot(density(priorNN),col = 2,lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
median(posteriorNN)
abline(v=quantile(s1,0.9),lty=2,lwd=3,col=2) #puts a vertical line (v=) onto the plot for s1; lty= gives line style, 2 gives dashes
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
plot(density(priorNN),col = 2,lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
rm(list = ls())
priorNN <- runif(1000000, min = 100, max = 100000)
bp <- 100000
mu <- 1e-8*bp
CoalesTime <- rexp(10000, 1/(priorNN))
rm(list = ls())
priorNN <- runif(1000000, min = 100, max = 100000)
bp <- 100000
mu <- 1e-8*bp
for (ii in 1:10000){
CoalesTime <- rep(NA, 10000)
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
for (ii in 1:10000){
CoalesTime <- rep(NA, 10000)
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
priorNN <- runif(1000000, min = 100, max = 100000)
bp <- 100000
mu <- 1e-8*bp
for (ii in 1:1000000){
CoalesTime <- rep(NA, 1000000)
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
rm(list = ls())
priorNN <- runif(1000000, min = 100, max = 100000)
bp <- 100000
mu <- 1e-8*bp
for (ii in 1:1000000){
CoalesTime <- rep(NA, 1000000)
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
head(CoalesTime)
head(priorNN)
rm(list = ls())
priorNN <- runif(1000000, min = 100, max = 100000)
for (ii in 1:10000){
CoalesTime <- rep(NA, 10000)
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
rm(list = ls())
priorNN <- runif(1000000, min = 100, max = 100000)
CoalesTime <- rep(NA, 10000)
for (ii in 1:10000){
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
rm(list = ls())
priorNN <- runif(1000000, min = 100, max = 100000)
CoalesTime <- rep(NA, 1000000)
for (ii in 1:1000000){
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
bp <- 100000
mu <- 1e-8*bp
MutaRate <- mu*CoalesTime
NumbSNP <- rep(NA, 10000)
for (ii in 1:10000){
NumbSNP[ii] <- rpois(1, MutaRate[ii])
}
mean(NumbSNP)
sims <- cbind(priorNN, NumbSNP)
acceptNN <- subset(sims, sims[, 2] >= 45 & sims[, 2] <= 55)
posteriorNN <- acceptNN[, 1]
plot(density(priorNN),col = 2,lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
median(posteriorNN)
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
bp <- 100000
mu <- 1e-8*bp
MutaRate <- mu*CoalesTime
NumbSNP <- rep(NA, 1000000)
for (ii in 1:1000000){
NumbSNP[ii] <- rpois(1, MutaRate[ii])
}
mean(NumbSNP)
sims <- cbind(priorNN, NumbSNP)
acceptNN <- subset(sims, sims[, 2] >= 45 & sims[, 2] <= 55)
posteriorNN <- acceptNN[, 1]
plot(density(priorNN),col = 2,lwd = 1,xlab = "population size", main = "Prior and Posterior")
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
lines(density(posteriorNN),col = 4,lwd = 1)
median(posteriorNN)
plot(density(priorNN),col = 2, ylim = c(0, 0.5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
plot(density(priorNN),col = 2, ylim = c(0, 0.05), lwd = 1,xlab = "population size", main = "Prior and Posterior")
plot(density(priorNN),col = 2, ylim = c(0, 0.005), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
plot(density(priorNN),col = 2, ylim = c(0, 0.0005), lwd = 1,xlab = "population size", main = "Prior and Posterior")
plot(density(priorNN),col = 2, ylim = c(0, 0.00005), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
plot(density(priorNN),col = 2, ylim = c(0, 2e-5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(3e4, 4e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
plot(density(priorNN),col = 2, ylim = c(0, 2e-5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
median(posteriorNN)
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
rm(list = ls())
priorNN <- runif(1000000, min = 100, max = 100000)
CoalesTime <- rep(NA, 1000000)
for (ii in 1:1000000){
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
bp <- 100000
mu <- 1e-8*bp
MutaRate <- mu*CoalesTime
NumbSNP <- rep(NA, 1000000)
for (ii in 1:1000000){
NumbSNP[ii] <- rpois(1, MutaRate[ii])
}
mean(NumbSNP)
sims <- cbind(priorNN, NumbSNP)
acceptNN <- subset(sims, sims[, 2] >= 45 & sims[, 2] <= 55)
posteriorNN <- acceptNN[, 1]
plot(density(priorNN),col = 2, ylim = c(0, 2e-5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
median(posteriorNN)
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
plot(density(priorNN),col = 2, ylim = c(0, 2e-5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
median(posteriorNN)
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
abline(v = 4e4)
plot(density(priorNN),col = 2, ylim = c(0, 2e-5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
abline(v = quantile(posteriorNN, 0.95), lty = 2, lwd = 1, col = 1)
sum(priorNN < 0)
sum(priorNN < 100)
sum(priorNN < 101)
priorNN <- runif(1000000, min = 1000, max = 1000000)
CoalesTime <- rep(NA, 1000000)
for (ii in 1:1000000){
CoalesTime[ii] <- rexp(1, 1/(priorNN[ii]))
}
mean(CoalesTime)
bp <- 100000
mu <- 1e-8*bp
MutaRate <- mu*CoalesTime
NumbSNP <- rep(NA, 1000000)
for (ii in 1:1000000){
NumbSNP[ii] <- rpois(1, MutaRate[ii])
}
mean(NumbSNP)
sims <- cbind(priorNN, NumbSNP)
acceptNN <- subset(sims, sims[, 2] >= 45 & sims[, 2] <= 55)
posteriorNN <- acceptNN[, 1]
plot(density(priorNN),col = 2, ylim = c(0, 2e-5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
plot(density(priorNN),col = 2, ylim = c(0, 1e-5), lwd = 1,xlab = "population size", main = "Prior and Posterior")
plot(density(priorNN),col = 2, ylim = c(0, 4e-6), lwd = 1,xlab = "population size", main = "Prior and Posterior")
plot(density(priorNN),col = 2, ylim = c(0, 2e-6), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
plot(density(priorNN),col = 2, ylim = c(0, 3e-6), lwd = 1,xlab = "population size", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
#median posterior
median(posteriorNN)
plot(density(priorNN),col = 2, ylim = c(0, 3e-6), lwd = 1,xlab = "population size (prior between 1000 to 1000000", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
#median posterior
median(posteriorNN)
#95% credible interval
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
legend(0, 2e-5 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
legend(5e5, 2e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
legend(5e5, 3e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
plot(density(priorNN),col = 2, ylim = c(0, 3e-6), lwd = 1,xlab = "population size (prior between 1000 to 1000000", main = "Prior and Posterior")
lines(density(posteriorNN),col = 4,lwd = 1)
legend(5e5, 3e-6 ,c("prior","posterior"),lwd=1,col=c(2,4),cex=1)
abline(v=quantile(posteriorNN,0.95),lty=2,lwd=1,col=1)
